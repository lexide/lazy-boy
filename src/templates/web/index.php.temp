<?php
include_once("../app/bootstrap.php");

use Lexide\LazyBoy\Config\RouteLoader;
use Psr\Log\LoggerInterface;
use Slim\App;

include("./bootstrap.php");

function errorAndExit(string $message, int $statusCode) {
    header("Status: $statusCode");
    header("Content-Type: application/json");
    echo json_encode(["error" => $message];
    exit(1);
}

try {
    $container = buildContainer();
} catch (Exception $e) {
    errorAndExit("A critical error has occurred", 400);
}

try {

    /** @var App $application */
    $application = $container["api.application"];

    /** @var RouteLoader $routeLoader */
    $routeLoader = $container["api.routeLoader"];
    $routeLoader->setRoutes($application);

    $application->run();

} catch (Exception $e) {
    /** @var LoggerInterface $exceptionLogger */
    $exceptionLogger = $container["exceptionLogger"];
    logException($exceptionLogger, $e);

    errorAndExit("An error has occurred", $e->getCode() ?: 400);
}
